var _user$project$Pr5$myReverse = A2(
	_elm_lang$core$List$foldl,
	F2(
		function (x, y) {
			return {ctor: '::', _0: x, _1: y};
		}),
	{ctor: '[]'});
var _user$project$Pr5$test = _elm_lang$core$List$length(
	A2(
		_elm_lang$core$List$filter,
		F2(
			function (x, y) {
				return _elm_lang$core$Native_Utils.eq(x, y);
			})(false),
		{
			ctor: '::',
			_0: _elm_lang$core$Native_Utils.eq(
				_user$project$Pr5$myReverse(
					{
						ctor: '::',
						_0: 1,
						_1: {
							ctor: '::',
							_0: 2,
							_1: {ctor: '[]'}
						}
					}),
				{
					ctor: '::',
					_0: 2,
					_1: {
						ctor: '::',
						_0: 1,
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Native_Utils.eq(
					_user$project$Pr5$myReverse(
						{ctor: '[]'}),
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Native_Utils.eq(
						_user$project$Pr5$myReverse(
							{
								ctor: '::',
								_0: 1,
								_1: {
									ctor: '::',
									_0: 2,
									_1: {
										ctor: '::',
										_0: 3,
										_1: {ctor: '[]'}
									}
								}
							}),
						{
							ctor: '::',
							_0: 3,
							_1: {
								ctor: '::',
								_0: 2,
								_1: {
									ctor: '::',
									_0: 1,
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			}
		}));
var _user$project$Pr5$main = _elm_lang$virtual_dom$Native_VirtualDom.staticProgram(
	_elm_lang$html$Html$text(
		function () {
			var _p0 = _user$project$Pr5$test;
			switch (_p0) {
				case 0:
					return 'Your implementation passed all tests.';
				case 1:
					return 'Your implementation failed one test.';
				default:
					return A2(
						_elm_lang$core$Basics_ops['++'],
						'Your implementation failed ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(_p0),
							' tests.'));
			}
		}()));
